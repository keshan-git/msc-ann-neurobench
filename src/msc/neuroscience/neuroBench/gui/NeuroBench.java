package msc.neuroscience.neuroBench.gui;

import java.awt.EventQueue;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import msc.neuroscience.neuroBench.core.ANNEngine;
import msc.neuroscience.neuroBench.core.activationfunction.ActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.BinarySigmoidActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.BinaryStepActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.BipolarSigmoidActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.BipolarStepActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.HyperbolicTangentActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.LinearActivationFunction;
import msc.neuroscience.neuroBench.core.activationfunction.RampElementActivationFunction;
import msc.neuroscience.neuroBench.gui.panel.ActivationPanelParameters;
import msc.neuroscience.neuroBench.gui.panel.TrainingPanelParameters;
import msc.neuroscience.neuroBench.util.FileUtil;
import msc.neuroscience.neuroBench.util.InvalidFileFormatException;

/**
 *
 * @author Keshan De Silva
 */
public class NeuroBench extends javax.swing.JFrame
{
    private ANNEngine engine;
    private ExecutorService executorService = Executors.newFixedThreadPool(2);

    public NeuroBench()
    {
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception ex){}
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        engine = new ANNEngine();
        btnUnSupervised.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btnGroupActivationFunctions = new javax.swing.ButtonGroup();
        toolBarCreate = new javax.swing.JToolBar();
        btnCreateFromFile = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnLinear = new javax.swing.JToggleButton();
        btnBinaryStep = new javax.swing.JToggleButton();
        btnBipolarStep = new javax.swing.JToggleButton();
        btnBinarySigmoid = new javax.swing.JToggleButton();
        btnBipolarSigmoid = new javax.swing.JToggleButton();
        btnRampElement = new javax.swing.JToggleButton();
        btnHyperbolicTangent = new javax.swing.JToggleButton();
        btnParameters = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnUnSupervised = new javax.swing.JToggleButton();
        btnSupervised = new javax.swing.JToggleButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        dataDisplayPanel = new msc.neuroscience.neuroBench.gui.panel.DataDisplayPanel();
        mainNetworkDisplay = new msc.neuroscience.neuroBench.gui.panel.MainDisplayPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NeuroBench [Test Bench for Artificial Neural Networks]");

        toolBarCreate.setFloatable(false);
        toolBarCreate.setRollover(true);

        btnCreateFromFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/open.png"))); // NOI18N
        btnCreateFromFile.setText("Open");
        btnCreateFromFile.setFocusable(false);
        btnCreateFromFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCreateFromFile.setMaximumSize(new java.awt.Dimension(77, 73));
        btnCreateFromFile.setMinimumSize(new java.awt.Dimension(77, 73));
        btnCreateFromFile.setPreferredSize(new java.awt.Dimension(77, 73));
        btnCreateFromFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCreateFromFile.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCreateFromFileActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnCreateFromFile);
        toolBarCreate.add(jSeparator1);

        btnGroupActivationFunctions.add(btnLinear);
        btnLinear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnLinear.setText("Linear");
        btnLinear.setEnabled(false);
        btnLinear.setFocusable(false);
        btnLinear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLinear.setMaximumSize(new java.awt.Dimension(77, 73));
        btnLinear.setMinimumSize(new java.awt.Dimension(77, 73));
        btnLinear.setPreferredSize(new java.awt.Dimension(77, 73));
        btnLinear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLinear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLinearActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnLinear);

        btnGroupActivationFunctions.add(btnBinaryStep);
        btnBinaryStep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnBinaryStep.setSelected(true);
        btnBinaryStep.setText("Binary Step");
        btnBinaryStep.setEnabled(false);
        btnBinaryStep.setFocusable(false);
        btnBinaryStep.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBinaryStep.setMaximumSize(new java.awt.Dimension(77, 73));
        btnBinaryStep.setMinimumSize(new java.awt.Dimension(77, 73));
        btnBinaryStep.setPreferredSize(new java.awt.Dimension(77, 73));
        btnBinaryStep.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBinaryStep.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnBinaryStepActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnBinaryStep);

        btnGroupActivationFunctions.add(btnBipolarStep);
        btnBipolarStep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnBipolarStep.setText("Bipolar Step");
        btnBipolarStep.setEnabled(false);
        btnBipolarStep.setFocusable(false);
        btnBipolarStep.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBipolarStep.setMaximumSize(new java.awt.Dimension(77, 73));
        btnBipolarStep.setMinimumSize(new java.awt.Dimension(77, 73));
        btnBipolarStep.setPreferredSize(new java.awt.Dimension(77, 73));
        btnBipolarStep.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBipolarStep.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnBipolarStepActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnBipolarStep);

        btnGroupActivationFunctions.add(btnBinarySigmoid);
        btnBinarySigmoid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnBinarySigmoid.setText("Binary Sigmoid");
        btnBinarySigmoid.setEnabled(false);
        btnBinarySigmoid.setFocusable(false);
        btnBinarySigmoid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBinarySigmoid.setMaximumSize(new java.awt.Dimension(77, 73));
        btnBinarySigmoid.setMinimumSize(new java.awt.Dimension(77, 73));
        btnBinarySigmoid.setPreferredSize(new java.awt.Dimension(77, 73));
        btnBinarySigmoid.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBinarySigmoid.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnBinarySigmoidActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnBinarySigmoid);

        btnGroupActivationFunctions.add(btnBipolarSigmoid);
        btnBipolarSigmoid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnBipolarSigmoid.setText("Bipolar Sigmoid");
        btnBipolarSigmoid.setEnabled(false);
        btnBipolarSigmoid.setFocusable(false);
        btnBipolarSigmoid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBipolarSigmoid.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBipolarSigmoid.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnBipolarSigmoidActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnBipolarSigmoid);

        btnGroupActivationFunctions.add(btnRampElement);
        btnRampElement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnRampElement.setText("Ramp");
        btnRampElement.setEnabled(false);
        btnRampElement.setFocusable(false);
        btnRampElement.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRampElement.setMaximumSize(new java.awt.Dimension(77, 73));
        btnRampElement.setMinimumSize(new java.awt.Dimension(77, 73));
        btnRampElement.setPreferredSize(new java.awt.Dimension(77, 73));
        btnRampElement.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRampElement.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRampElementActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnRampElement);

        btnGroupActivationFunctions.add(btnHyperbolicTangent);
        btnHyperbolicTangent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnHyperbolicTangent.setText("Hyperbolic");
        btnHyperbolicTangent.setEnabled(false);
        btnHyperbolicTangent.setFocusable(false);
        btnHyperbolicTangent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHyperbolicTangent.setMaximumSize(new java.awt.Dimension(77, 73));
        btnHyperbolicTangent.setMinimumSize(new java.awt.Dimension(77, 73));
        btnHyperbolicTangent.setPreferredSize(new java.awt.Dimension(77, 73));
        btnHyperbolicTangent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHyperbolicTangent.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnHyperbolicTangentActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnHyperbolicTangent);

        btnParameters.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/function.png"))); // NOI18N
        btnParameters.setText("Parameters");
        btnParameters.setEnabled(false);
        btnParameters.setFocusable(false);
        btnParameters.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnParameters.setMaximumSize(new java.awt.Dimension(77, 73));
        btnParameters.setMinimumSize(new java.awt.Dimension(77, 73));
        btnParameters.setPreferredSize(new java.awt.Dimension(77, 73));
        btnParameters.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnParameters.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnParametersActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnParameters);
        toolBarCreate.add(jSeparator4);

        btnUnSupervised.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/training.png"))); // NOI18N
        btnUnSupervised.setText("Unsupervised");
        btnUnSupervised.setToolTipText("");
        btnUnSupervised.setFocusable(false);
        btnUnSupervised.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUnSupervised.setMaximumSize(new java.awt.Dimension(77, 73));
        btnUnSupervised.setMinimumSize(new java.awt.Dimension(77, 73));
        btnUnSupervised.setPreferredSize(new java.awt.Dimension(77, 73));
        btnUnSupervised.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUnSupervised.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUnSupervisedActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnUnSupervised);

        btnSupervised.setIcon(new javax.swing.ImageIcon(getClass().getResource("/msc/neuroscience/neuroBench/resources/training.png"))); // NOI18N
        btnSupervised.setText("Supervised");
        btnSupervised.setFocusable(false);
        btnSupervised.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSupervised.setMaximumSize(new java.awt.Dimension(77, 73));
        btnSupervised.setMinimumSize(new java.awt.Dimension(77, 73));
        btnSupervised.setPreferredSize(new java.awt.Dimension(77, 73));
        btnSupervised.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSupervised.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSupervisedActionPerformed(evt);
            }
        });
        toolBarCreate.add(btnSupervised);

        jSplitPane1.setBorder(null);
        jSplitPane1.setLeftComponent(dataDisplayPanel);
        jSplitPane1.setRightComponent(mainNetworkDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBarCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBarCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateFromFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCreateFromFileActionPerformed
    {//GEN-HEADEREND:event_btnCreateFromFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(this);
        
        if (response == JFileChooser.APPROVE_OPTION)
        {
            createFromFile(fileChooser.getSelectedFile());
        }
        
    }//GEN-LAST:event_btnCreateFromFileActionPerformed

    private void btnLinearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLinearActionPerformed
    {//GEN-HEADEREND:event_btnLinearActionPerformed
        updateActivationFunction(new LinearActivationFunction());
    }//GEN-LAST:event_btnLinearActionPerformed

    private void btnBinaryStepActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBinaryStepActionPerformed
    {//GEN-HEADEREND:event_btnBinaryStepActionPerformed
        updateActivationFunction(new BinaryStepActivationFunction());
    }//GEN-LAST:event_btnBinaryStepActionPerformed

    private void btnBipolarStepActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBipolarStepActionPerformed
    {//GEN-HEADEREND:event_btnBipolarStepActionPerformed
        updateActivationFunction(new BipolarStepActivationFunction());
    }//GEN-LAST:event_btnBipolarStepActionPerformed

    private void btnBinarySigmoidActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBinarySigmoidActionPerformed
    {//GEN-HEADEREND:event_btnBinarySigmoidActionPerformed
        updateActivationFunction(new BinarySigmoidActivationFunction());
    }//GEN-LAST:event_btnBinarySigmoidActionPerformed

    private void btnBipolarSigmoidActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBipolarSigmoidActionPerformed
    {//GEN-HEADEREND:event_btnBipolarSigmoidActionPerformed
        updateActivationFunction(new BipolarSigmoidActivationFunction());
    }//GEN-LAST:event_btnBipolarSigmoidActionPerformed

    private void btnRampElementActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRampElementActionPerformed
    {//GEN-HEADEREND:event_btnRampElementActionPerformed
        updateActivationFunction(new RampElementActivationFunction());
    }//GEN-LAST:event_btnRampElementActionPerformed

    private void btnHyperbolicTangentActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnHyperbolicTangentActionPerformed
    {//GEN-HEADEREND:event_btnHyperbolicTangentActionPerformed
        updateActivationFunction(new HyperbolicTangentActivationFunction());
    }//GEN-LAST:event_btnHyperbolicTangentActionPerformed

    private void btnParametersActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnParametersActionPerformed
    {//GEN-HEADEREND:event_btnParametersActionPerformed
        ActivationPanelParameters activationPanelParameters = new ActivationPanelParameters();
        activationPanelParameters.setActivationFunction(engine.getNeuralNetwork().getOutputLayerNodes().get(0).getActivationFunction());
        
        JOptionPane.showMessageDialog(null, activationPanelParameters, "Activation Parameters", JOptionPane.PLAIN_MESSAGE);
        
        engine.updateActivationFunctionParameters(activationPanelParameters.getThreshold(),
                                   activationPanelParameters.getAlpha());
        
        mainNetworkDisplay.updateUI();
    }//GEN-LAST:event_btnParametersActionPerformed

    private void btnSupervisedActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSupervisedActionPerformed
    {//GEN-HEADEREND:event_btnSupervisedActionPerformed
        if (!btnSupervised.isSelected())
        {
            engine.setTrainingMode(false);
            engine.evaluateANN(0);
            mainNetworkDisplay.updateUI();
        }
        else
        {
            TrainingPanelParameters trainingPanelParameters = new TrainingPanelParameters();
            JOptionPane.showMessageDialog(null, trainingPanelParameters, "Training Parameters", JOptionPane.PLAIN_MESSAGE);
            mainNetworkDisplay.setANNEngine(engine);
            
            executorService.submit(new Runnable()
            {
                @Override
                public void run()
                {
                    engine.setTrainingMode(true);
                    engine.startSuperviousTraining(trainingPanelParameters.getLearningRate(),
                                    trainingPanelParameters.getAcceptanceLevel());
                }
            });
        }
    }//GEN-LAST:event_btnSupervisedActionPerformed

    private void btnUnSupervisedActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUnSupervisedActionPerformed
    {//GEN-HEADEREND:event_btnUnSupervisedActionPerformed
        if (!btnUnSupervised.isSelected())
        {
            engine.setTrainingMode(false);
            engine.evaluateANN(0);
            mainNetworkDisplay.updateUI();
        }
        else
        {
            TrainingPanelParameters trainingPanelParameters = new TrainingPanelParameters();
            trainingPanelParameters.setLearningRateVisible(false);
            JOptionPane.showMessageDialog(null, trainingPanelParameters, "Training Parameters", JOptionPane.PLAIN_MESSAGE);

            executorService.submit(new Runnable()
            {
                @Override
                public void run()
                {
                    engine.setTrainingMode(true);
                    engine.startUnSuperviousTraining(trainingPanelParameters.getLearningRate(),
                                    trainingPanelParameters.getAcceptanceLevel());
                }
            });
        }
    }//GEN-LAST:event_btnUnSupervisedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new NeuroBench().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnBinarySigmoid;
    private javax.swing.JToggleButton btnBinaryStep;
    private javax.swing.JToggleButton btnBipolarSigmoid;
    private javax.swing.JToggleButton btnBipolarStep;
    private javax.swing.JButton btnCreateFromFile;
    private javax.swing.ButtonGroup btnGroupActivationFunctions;
    private javax.swing.JToggleButton btnHyperbolicTangent;
    private javax.swing.JToggleButton btnLinear;
    private javax.swing.JButton btnParameters;
    private javax.swing.JToggleButton btnRampElement;
    private javax.swing.JToggleButton btnSupervised;
    private javax.swing.JToggleButton btnUnSupervised;
    private msc.neuroscience.neuroBench.gui.panel.DataDisplayPanel dataDisplayPanel;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSplitPane jSplitPane1;
    private msc.neuroscience.neuroBench.gui.panel.MainDisplayPanel mainNetworkDisplay;
    private javax.swing.JToolBar toolBarCreate;
    // End of variables declaration//GEN-END:variables

    private void createFromFile(File selectedFile)
    {
        try
        {
            FileUtil.getInstance().generateNeuralNetwork(engine, selectedFile);
            
            engine.setTrainingMode(false);
        
            mainNetworkDisplay.setANNEngine(engine);
            dataDisplayPanel.setANNEngine(engine);
            btnBinaryStep.setSelected(true);
            btnSupervised.setSelected(false);
            btnUnSupervised.setSelected(false);

            dataDisplayPanel.addListSelectionListener(new ListSelectionListener()
            {

                @Override
                public void valueChanged(ListSelectionEvent lse)
                {
                    mainNetworkDisplay.repaint();
                    mainNetworkDisplay.updateUI();
                }
            });

            engine.evaluateANN();

            enabledToolbarButtons(true);
        }
        catch (InvalidFileFormatException ex)
        {
            String errorMessage = "Unable to read data file : " + selectedFile.getName();
            errorMessage += "\n" + ex.getMessage();
            JOptionPane.showMessageDialog(this, errorMessage, "Invalid Input File", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (IOException ex)
        {
            Logger.getLogger(NeuroBench.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void updateActivationFunction(ActivationFunction activationFunction)
    {
        if (engine != null)
        {
            engine.updateActivationFunction(activationFunction);
            engine.evaluateANN();
            mainNetworkDisplay.updateUI();
        }
    }

    private void enabledToolbarButtons(boolean flag)
    {
        btnLinear.setEnabled(flag);
        btnBinaryStep.setEnabled(flag);
        btnBipolarStep.setEnabled(flag);
        btnBinarySigmoid.setEnabled(flag);
        btnBipolarSigmoid.setEnabled(flag);
        btnRampElement.setEnabled(flag);
        btnHyperbolicTangent.setEnabled(flag); 
        btnParameters.setEnabled(flag);
        
        btnUnSupervised.setEnabled(flag);
        btnSupervised.setEnabled(flag);
    }
}
